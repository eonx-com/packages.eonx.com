(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{204:function(t,a,n){"use strict";n.r(a);var s=n(3),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"configuration"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),n("p",[t._v("To customize the EasyApiPlatform package for your Symfony application, you can use a configuration file.")]),t._v(" "),n("h2",{attrs:{id:"configuration-files"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configuration-files"}},[t._v("#")]),t._v(" Configuration files")]),t._v(" "),n("p",[t._v("For Symfony applications, the EasyApiPlatform configuration file can be written in YAML, XML, or PHP format. It should be placed under the "),n("code",[t._v("config/packages")]),t._v(" directory with a name like "),n("code",[t._v("easy_api_platform.<format>")]),t._v(". The root node of the configuration\nmust be named "),n("code",[t._v("easy_api_platform")]),t._v(".")]),t._v(" "),n("h2",{attrs:{id:"configuration-options"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configuration-options"}},[t._v("#")]),t._v(" Configuration options")]),t._v(" "),n("p",[t._v("The following configuration options are available:")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("advanced_search_filter")]),t._v(": Configures options for the "),n("code",[t._v("\\EonX\\EasyApiPlatform\\Filters\\AdvancedSearchFilter")]),t._v(" class.\n"),n("ul",[n("li",[n("code",[t._v("iri_fields")]),t._v(": An array of fields to be treated as IRIs. Defaults to "),n("code",[t._v("[]")]),t._v(".")])])])]),t._v(" "),n("h2",{attrs:{id:"example-configuration-file"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#example-configuration-file"}},[t._v("#")]),t._v(" Example configuration file")]),t._v(" "),n("p",[t._v("Here's an example of a configuration file named "),n("code",[t._v("easy_api_platform.php")]),t._v(" for Symfony:")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token php language-php"}},[n("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strict_types"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token package"}},[t._v("Symfony"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Component"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("DependencyInjection"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Loader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Configurator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token package"}},[t._v("Symfony"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("EasyApiPlatformConfig")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("EasyApiPlatformConfig")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$easyApiPlatformConfig")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword return-type"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$easyApiPlatformConfig")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("advancedSearchFilter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("iriFields")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'entityId'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),n("p",[t._v("With this configuration, you can tailor the behavior of EasyApiPlatform to suit your specific requirements in your Symfony project. Feel free to experiment and adjust the settings as needed.")])])}),[],!1,null,null,null);a.default=e.exports}}]);