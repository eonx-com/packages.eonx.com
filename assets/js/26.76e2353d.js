(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{218:function(t,e,a){"use strict";a.r(e);var s=a(3),i=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{attrs:{align:"center"}},[a("h1",[t._v("EonX - EasyAsync")]),t._v(" "),a("p",[t._v("Makes dealing with async processes easier.")])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"documentation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#documentation"}},[t._v("#")]),t._v(" Documentation")]),t._v(" "),a("p",[t._v("Coming soon...")]),t._v(" "),a("h2",{attrs:{id:"todo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#todo"}},[t._v("#")]),t._v(" TODO")]),t._v(" "),a("ul",[a("li",[t._v("[x] Implement messenger handlers for internal messages")]),t._v(" "),a("li",[t._v("[x] Implement BatchObjectManager::approve")]),t._v(" "),a("li",[t._v("[x] Handle nested batch completion")]),t._v(" "),a("li",[t._v("[ ] Clean up code")])]),t._v(" "),a("h2",{attrs:{id:"logic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logic"}},[t._v("#")]),t._v(" Logic")]),t._v(" "),a("h3",{attrs:{id:"batch-dispatch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#batch-dispatch"}},[t._v("#")]),t._v(" Batch dispatch")]),t._v(" "),a("ol",[a("li",[t._v("Create batch and its batchItems")]),t._v(" "),a("li",[t._v("Dispatch batch\n"),a("ol",[a("li",[t._v("Persist batch and its batchItems (OPTIONAL)")]),t._v(" "),a("li",[t._v("Iterate through eligible batchItems and dispatch them")]),t._v(" "),a("li",[t._v("Update all batchItems from each page status to pending")]),t._v(" "),a("li",[t._v("Return batch")])])])]),t._v(" "),a("h3",{attrs:{id:"process-batchitem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#process-batchitem"}},[t._v("#")]),t._v(" Process BatchItem")]),t._v(" "),a("ol",[a("li",[t._v("Identify if current message is for a batchItem, if not pass on")]),t._v(" "),a("li",[t._v("Lock rest of process against the batchItem ID")]),t._v(" "),a("li",[t._v("Fetch current batchItem based on its ID\n"),a("ol",[a("li",[t._v("Fix batchItem status if still as created")])])]),t._v(" "),a("li",[t._v("Fetch current batch based on its ID")]),t._v(" "),a("li",[t._v("Inject them in current message if needed")]),t._v(" "),a("li",[t._v("Process batchItem logic\n"),a("ol",[a("li",[t._v("Prevent process if batchItem: alreadyProcessed, can't be retried, its batch is cancelled")]),t._v(" "),a("li",[t._v("Increase batchItem attempts")]),t._v(" "),a("li",[t._v("Set batchItem startedAt")]),t._v(" "),a("li",[t._v("--- If any exception up to this point, message can be retried ---")]),t._v(" "),a("li",[t._v("Execute message logic")]),t._v(" "),a("li",[t._v("--- If any exception after this point, batchItem must be updated separately ---")]),t._v(" "),a("li",[t._v("Set batchItem status")]),t._v(" "),a("li",[t._v("Set batchItem finishedAt")]),t._v(" "),a("li",[t._v("Persist batchItem changes")]),t._v(" "),a("li",[t._v("Update and persist batch for batchItem")]),t._v(" "),a("li",[t._v("Dispatch batchItem events")]),t._v(" "),a("li",[t._v("Dispatch batch events")]),t._v(" "),a("li",[t._v("Return result of message logic")])])])]),t._v(" "),a("p",[t._v("!!! MOVE CORE LOGIC FROM LISTENERS TO CORE CODE !!!")])])}),[],!1,null,null,null);e.default=i.exports}}]);